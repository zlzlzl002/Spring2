<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<!-- DB 접속 정보를 가지고 있는 문서 읽어들이기 -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location">
			<beans:value>classpath:com/gura/step04/mybatis/db.properties</beans:value>
		</beans:property>
	</beans:bean>
	<!-- DataSource 설정 -->
	<beans:bean  id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<beans:property name="driverClass" value="${driver}"/>
		<beans:property name="url" value="${url}"/>
		<beans:property name="username" value="${username}"/>
		<beans:property name="password" value="${password}"/>
	</beans:bean>
	<!-- SqlSessionFactory 객체 -->
	<beans:bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation"
			value="classpath:com/gura/step04/mybatis/Configuration.xml"/>
	</beans:bean>
	
	<!-- Dao 에 주입해줄 SqlSession 인터페이스를 구현한 
	SqlSessionTemplate 객체 -->
	<beans:bean class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory" ref="sessionFactory"/>
	</beans:bean>
	
	<!-- 1월 30일 Transcation Manager 설정DB에 commit or 롤백 할지 구분해준다. -->
	<beans:bean id="txManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<!-- 1월30일  어노테이션으로 tx(트렌젝션) 처리 하도록 설정 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Multipart 폼 전송을 처리하기 위한 bean -->
	
	<beans:bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10240000"/>		
	</beans:bean>
	
	<!-- Abstract view 가 동작하도록 설정 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"/>
	</beans:bean>
	
	<context:component-scan base-package="com.gura.step04" />
	
	<!-- com.gura.step04.users 하위의 모든 페키지 스켄하기  -->
	<context:component-scan 
		base-package="com.gura.step04.users.*"/>
	
	<!-- com.gura.step04.file 하위의 모든 페키지 스켄하기  -->
	<context:component-scan 
		base-package="com.gura.step04.file.*"/>
		
	<!-- com.gura.step04.cafe 하위의 모든 페키지 스켄하기  -->
	<context:component-scan 
		base-package="com.gura.step04.cafe.*"/>		
	
	<!--  com.gura.step04.shop 하위의 모든 페키지 스켄하기 -->	
	<context:component-scan 
		base-package="com.gura.step04.shop.*"/>	
	
	<!--  com.gura.step04.exception  -->
	<context:component-scan 
		base-package="com.gura.step04.exception"/>	
	
	<context:component-scan base-package="com.gura.step04.aspect"/>
	
	<!-- com.gura.step04.util 패키지 스켄하기 -->
	<context:component-scan base-package="com.gura.step04.util"/>
	
	<!-- 어노테이션 기반으로 aop 적용할수 있도록 설정 -->
	<aop:aspectj-autoproxy/>
	
</beans:beans>










